// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["selectRelationCount"]
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Client {
  id        String    @id @default(uuid())
  name      String
  email     String?   @db.VarChar(120)
  cpf       String    @unique @db.VarChar(15)
  phone     String    @db.VarChar(20)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  vehicles  Vehicle[]
}

model Vehicle {
  id         String    @id @default(uuid())
  license    String    @db.VarChar(20)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  owner      Client    @relation(fields: [clientId], references: [id])
  clientId   String
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId String
  services   Service[]
}

model Category {
  id        String    @id @default(uuid())
  name      String    @db.VarChar(20)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  vehicles  Vehicle[]
}

model Employee {
  id        String    @id @default(uuid())
  name      String
  email     String?   @db.VarChar(120)
  cpf       String    @db.VarChar(15)
  phone     String    @db.VarChar(20)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  services  Service[]
}

model ServiceCategory {
  id        String    @id @default(uuid())
  name      String    @db.VarChar(20)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  services  Service[]
}

model Service {
  id          String   @id @default(uuid())
  dateService DateTime
  rate        Int
  vehicle     Vehicle  @relation(fields: [vehicleId], references: [id])
  vehicleId   String
  employee    Employee @relation(fields: [employeeId], references: [id])
  employeeId  String
  serviceCategory   ServiceCategory  @relation(fields: [serviceCategoryId], references: [id])
  serviceCategoryId String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
