// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// npx prisma migrate dev

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["selectRelationCount"]
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Client {
  id        String       @id @default(uuid())
  name      String
  email     String?      @db.VarChar(120)
  cpf       String       @unique @db.VarChar(15)
  phone     String       @db.VarChar(20)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  vehicles  Vehicle[]
  schedules Scheduling[]
}

model Vehicle {
  id                String          @id @default(uuid())
  license           String          @db.VarChar(20)
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  owner             Client          @relation(fields: [clientId], references: [id])
  clientId          String
  vehicleCategory   VehicleCategory @relation(fields: [vehicleCategoryId], references: [id])
  vehicleCategoryId String
  schedules         Scheduling[]
}

model VehicleCategory {
  id            String          @id @default(uuid())
  name          String          @db.VarChar(20)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  vehicles      Vehicle[]
  ServicePrices ServicePrices[]
}

model Service {
  id   String @id @default(uuid())
  name String @db.VarChar(50)

  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  schedules     Scheduling[]
  ServicePrices ServicePrices[]
}

model ServicePrices {
  id                Int             @id @default(autoincrement())
  value             Float
  duration          Int
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  service           Service         @relation(fields: [serviceId], references: [id])
  serviceId         String
  vehicleCategory   VehicleCategory @relation(fields: [vehicleCategoryId], references: [id])
  vehicleCategoryId String
  Scheduling        Scheduling[]
}

model SchedulingStatus {
  id        Int          @id @default(autoincrement())
  name      String       @db.VarChar(50)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  schedules Scheduling[]
}

model Scheduling {
  id                 String           @id @default(uuid())
  dateService        DateTime
  rate               Int
  vehicle            Vehicle          @relation(fields: [vehicleId], references: [id])
  vehicleId          String
  client             Client           @relation(fields: [clientId], references: [id])
  clientId           String
  service            Service          @relation(fields: [serviceId], references: [id])
  serviceId          String
  schedulingStatus   SchedulingStatus @relation(fields: [schedulingStatusId], references: [id])
  schedulingStatusId Int              @default(1)
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
  ServicePrices      ServicePrices?   @relation(fields: [servicePricesId], references: [id])
  servicePricesId    Int?
}

model SchedulesConfig {
  id           String   @id @default(uuid())
  available_am Int
  available_pm Int
  ativo        Int      @default(1)
  createdAt    DateTime @default(now())
}
